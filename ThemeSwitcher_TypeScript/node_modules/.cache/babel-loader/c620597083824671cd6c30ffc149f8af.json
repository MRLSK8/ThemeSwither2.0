{"ast":null,"code":"var _jsxFileName = \"/home/mrlsk8/Desktop/themeswitcher/src/App.tsx\";\nimport React, { useState } from 'react';\nimport Header from './components/header';\nimport GlobalStyle from './styles/global';\nimport { ThemeProvider } from 'styled-components';\nimport Light from './styles/themes/light';\n\nconst App = () => {\n  const [theme, setTheme] = useState(Light);\n\n  const toggleTheme = () => {\n    setTheme(theme.title === 'light');\n  };\n\n  return React.createElement(ThemeProvider, {\n    theme: Light,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/mrlsk8/Desktop/themeswitcher/src/App.tsx"],"names":["React","useState","Header","GlobalStyle","ThemeProvider","Light","App","theme","setTheme","toggleTheme","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACI,KAAD,CAAlC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAACD,KAAK,CAACG,KAAN,KAAgB,OAAjB,CAAR;AACD,GAFD;;AAIA,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEL,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAbD;;AAeA,eAAeC,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport Header from './components/header';\nimport GlobalStyle from './styles/global';\nimport { ThemeProvider } from 'styled-components';\nimport Light from './styles/themes/light';\nimport Dark from './styles/themes/dark';\n\nconst App = () => {\n  const [theme, setTheme] = useState(Light);\n  \n  const toggleTheme = () => {\n    setTheme(theme.title === 'light')\n  }\n\n  return (\n    <ThemeProvider theme={Light}>\n      <GlobalStyle />\n      <Header />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}